dbrp "monasca"."def"

var where_filter = lambda: TRUE

var data = stream
  |from()
    .measurement('vm.mem.free_perc')
    .where(where_filter)
    .groupBy('resource_id')
  |eval(lambda: unixNano(now()))
    .as('ts')
    .keep()
  |eval(lambda: 100 - int("value"))
    .as('used')
    .keep()

data
  |alert()
    .info(lambda: int("used") <= 85 AND int("used") > 75)
    .infoReset(lambda: int("used") <= 65)
    .stateChangesOnly()
    .noRecoveries()
    .message('instance,category=MEM,severity=I,key=MEM00004I,tenant={{ .Tags.tenant_id }},instance={{ .Tags.resource_id }},vm_name={{ .Tags.vm_name }} message="project "{{ .Tags.tenant_name }}" instance "{{ .Tags.vm_name }}" memory usage {{ .Fields.used }}% exceeds threshold 75%",metadata="{ "category": "mem", "tenant": "{{ .Tags.tenant_id }}", "instance": "{{ .Tags.resource_id }}" }" {{ .Fields.ts }}')
    .post()
      .endpoint('events')

data
  |alert()
    .warn(lambda: int("used") <= 95 AND int("used") > 85)
    .warnReset(lambda: int("used") <= 75)
    .stateChangesOnly()
    .noRecoveries()
    .message('instance,category=MEM,severity=W,key=MEM00005W,tenant={{ .Tags.tenant_id }},instance={{ .Tags.resource_id }},vm_name={{ .Tags.vm_name }} message="project "{{ .Tags.tenant_name }}" instance "{{ .Tags.vm_name }}" memory usage {{ .Fields.used }}% exceeds threshold 85%",metadata="{ "category": "mem", "tenant": "{{ .Tags.tenant_id }}", "instance": "{{ .Tags.resource_id }}" }" {{ .Fields.ts }}')
    .post()
      .endpoint('events')

data
  |alert()
    .crit(lambda: int("used") > 95)
    .critReset(lambda: int("used") <= 85)
    .stateChangesOnly()
    .noRecoveries()
    .message('instance,category=MEM,severity=C,key=MEM00006C,tenant={{ .Tags.tenant_id }},instance={{ .Tags.resource_id }},vm_name={{ .Tags.vm_name }} message="project "{{ .Tags.tenant_name }}" instance "{{ .Tags.vm_name }}" memory usage {{ .Fields.used }}% exceeds threshold 95%",metadata="{ "category": "mem", "tenant": "{{ .Tags.tenant_id }}", "instance": "{{ .Tags.resource_id }}" }" {{ .Fields.ts }}')
    .post()
      .endpoint('events')

data
  |alert()
    .info(lambda: int("used") < 50)
    .infoReset(lambda: int("used") <= 75)
    .stateChangesOnly()
    .noRecoveries()
    .message('instance,category=MEM,severity=I,key=MEM00007I,tenant={{ .Tags.tenant_id }},instance={{ .Tags.resource_id }},vm_name={{ .Tags.vm_name }} message="project "{{ .Tags.tenant_name }}" instance "{{ .Tags.vm_name }}" memory usage {{ .Fields.used }}% is normal",metadata="{ "category": "mem", "tenant": "{{ .Tags.tenant_id }}", "instance": "{{ .Tags.resource_id }}" }" {{ .Fields.ts }}')
    .post()
      .endpoint('events')
